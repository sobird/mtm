{"version":3,"file":"569.eab77e5a7a0593997425.chunk.js","mappings":"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","sources":["webpack:///./src/components/layout/base/index.tsx","webpack:///./src/utils/validator/isSmsCode.ts","webpack:///./src/services/register.ts","webpack:///./node_modules/@ant-design/pro-form/es/components/Checkbox/index.js","webpack:///./src/pages/register/index.tsx","webpack:///./src/services/common/captcha.ts","webpack:///./src/utils/validator/isMobilePhone.ts"],"sourcesContent":["/**\n * 通用布局页面\n *\n * sobird<i@sobird.me> at 2023/06/13 22:39:58 created.\n */\n\nimport React, { PropsWithChildren } from 'react';\nimport mtmLogo from '@/assets/mtm_logo.png';\nimport policeIcon from '@/assets/police_icon.png';\nimport './index.scss';\n\ninterface BaseProps {\n  hasWindow?: boolean;\n  hasBackground?: boolean;\n}\n\nconst Base: React.FC<PropsWithChildren<BaseProps>> = ({ children, hasWindow = true, hasBackground = true }) => {\n  return (\n    <div className='layout-base'>\n      <div className='base-header'>\n        <div className='base-header-box'>\n          <img src={mtmLogo} />\n        </div>\n      </div>\n      <div className='base-body' style={{background: hasBackground ? '' : 'none'}}>\n        {hasWindow ? <div className='base-body-box'><div className='base-window'>{children}</div></div> : children}\n      </div>\n      <div className='base-footer'>\n        <div className='copyright'>\n          <a target='_blank' href='https://beian.miit.gov.cn' rel='noreferrer'>\n            <span>©2020 meituan.com 京ICP备10211739号</span>\n          </a>\n          <img src={policeIcon} />\n          <a\n            target='_blank'\n            href='http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11000002002052'\n            rel='noreferrer'\n          >\n            <span>京公网安备11000002002052号</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Base;\n","/**\n * 是否为手机短信验证码 一般为6位数字\n * \n * sobird<i@sobird.me> at 2023/06/15 0:20:58 created.\n */\n\nexport const pattern = /^\\d{6}$/;\n\nexport default function isSmsCode(str: string) {\n  return pattern.test(str);\n}\n","\nimport http from \"@/utils/http\";\n\ninterface IRegisterRequest {\n  interCode: string;\n  mobile: string;\n  captcha?: string;\n}\n\nexport default function register(data: IRegisterRequest) {\n  return http.post('/register', data);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"options\", \"fieldProps\", \"proFieldProps\", \"valueEnum\"];\nimport { runFunction } from '@ant-design/pro-utils';\nimport { Checkbox } from 'antd';\nimport React from 'react';\nimport { createField } from \"../../BaseForm/createField\";\nimport ProFormField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CheckboxGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var options = _ref.options,\n    fieldProps = _ref.fieldProps,\n    proFieldProps = _ref.proFieldProps,\n    valueEnum = _ref.valueEnum,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsx(ProFormField, _objectSpread({\n    ref: ref,\n    valueType: \"checkbox\",\n    valueEnum: runFunction(valueEnum, undefined),\n    fieldProps: _objectSpread({\n      options: options\n    }, fieldProps),\n    lightProps: _objectSpread({\n      labelFormatter: function labelFormatter() {\n        return /*#__PURE__*/_jsx(ProFormField, _objectSpread({\n          ref: ref,\n          valueType: \"checkbox\",\n          mode: \"read\",\n          valueEnum: runFunction(valueEnum, undefined),\n          filedConfig: {\n            customLightMode: true\n          },\n          fieldProps: _objectSpread({\n            options: options\n          }, fieldProps),\n          proFieldProps: proFieldProps\n        }, rest));\n      }\n    }, rest.lightProps),\n    proFieldProps: proFieldProps\n  }, rest));\n});\n/**\n * 多选框的\n *\n * @param\n */\nvar ProFormCheckboxComponents = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var fieldProps = _ref2.fieldProps,\n    children = _ref2.children;\n  return /*#__PURE__*/_jsx(Checkbox, _objectSpread(_objectSpread({\n    ref: ref\n  }, fieldProps), {}, {\n    children: children\n  }));\n});\nvar ProFormCheckbox = createField(ProFormCheckboxComponents, {\n  valuePropName: 'checked'\n});\nvar WrappedProFormCheckbox = ProFormCheckbox;\nWrappedProFormCheckbox.Group = CheckboxGroup;\nexport default WrappedProFormCheckbox;","/**\n * 用户注册页面\n * \n * sobird<i@sobird.me> at 2023/06/13 22:17:20 created.\n */\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { Button, Select, message } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport Base from \"@/components/layout/base\";\nimport isMobilePhone from '@/utils/validator/isMobilePhone';\nimport isSmsCode from '@/utils/validator/isSmsCode';\nimport CaptchaService from '@/services/common/captcha';\nimport register from '@/services/register';\n\nimport './index.scss';\n\nimport { ProForm, ProFormText, ProFormCaptcha, ProFormCheckbox } from '@ant-design/pro-components';\n\nconst { Option } = Select;\n\ninterface RegisterFormData {\n  interCode: string,\n  mobile: string,\n  captcha: string,\n  policy?: boolean\n}\n\nfunction Register() {\n  const navigate = useNavigate();\n  const [ form ] = ProForm.useForm();\n  const [loading, setLoading] = useState(false);\n\n  // 提交注册\n  const onFinish = async (values: RegisterFormData)=> {\n    const {policy, captcha, ...formData} = values;\n    const captcha_cookie = Cookies.get('captcha');\n    message.destroy();\n    if(!policy) {\n      message.error('请勾选隐私协议');\n      return;\n    }\n\n    if(captcha_cookie != captcha) {\n      message.error('验证码错误');\n      return;\n    }\n\n    setLoading(true);\n    register(formData).then(() => {\n      setLoading(false);\n      navigate('/register/success');\n    })\n  };\n\n  const selectBefore = (\n    <ProForm.Item \n      noStyle\n      name=\"interCode\">\n      <Select \n        popupMatchSelectWidth={false} \n        bordered={false} \n        onClick={(event) => {event.stopPropagation()}} \n        optionLabelProp=\"label\"\n        onSelect={() => {\n          form.validateFields(['mobile']);\n        }}\n      >\n        <Option value=\"86\" label=\"+86\">+86(中国)</Option>\n        <Option value=\"65\" label=\"+65\">+65(新加坡)</Option>\n        <Option value=\"852\" label=\"+852\">+852(中国香港)</Option>\n        <Option value=\"853\" label=\"+853\">+853(中国澳门)</Option>\n      </Select>\n    </ProForm.Item>\n  );\n\n  return (\n    <Base>\n      <div className=\"base-register\">\n        <div className=\"base-title\">注册</div>\n        <ProForm\n          form={form}\n          name=\"base-form-register\"\n          initialValues={{ interCode: \"86\" }}\n          onFinish={onFinish}\n          colon={false}\n          className='base-form'\n          layout=\"horizontal\"\n          submitter={{\n            // 配置按钮文本\n            searchConfig: {\n              resetText: '重置',\n              submitText: '提交',\n            },\n            // 配置按钮的属性\n            resetButtonProps: {\n              style: {\n                // 隐藏重置按钮\n                display: 'none',\n              },\n            },\n            submitButtonProps: {},\n        \n            // 完全自定义整个区域\n            render: (props, doms) => {\n              return (\n                <>\n                  <ProForm.Item>\n                    <Button loading={loading} type=\"primary\" htmlType=\"submit\" className='base-submit-btn'>注册\n                    </Button>\n                  </ProForm.Item>\n                  <Button \n                    type=\"link\"\n                    onClick={() => {\n                      navigate('/login');\n                    }}\n                    style={{padding: 0, fontSize: 15, color: '#333'}}\n                  >已有账号，去登录 <RightOutlined size={18} /></Button>\n                </>\n              );\n            },\n          }}\n        >\n          <ProFormText\n            label=\"手机号\"\n            name=\"mobile\"\n            fieldProps={{\n              prefix: selectBefore,\n            }}\n            allowClear={false}\n            placeholder=\"账号使用者手机\"\n            rules={[\n              { validator: (_rule, value) => {\n                const interCode = form.getFieldValue('interCode');\n                if(!value) {\n                  return Promise.reject(new Error('手机号不能为空'));\n                } else if(isMobilePhone(value, interCode)) {\n                  return Promise.resolve();\n                } else {\n                  return Promise.reject(new Error('手机号格式不符合要求'));\n                }\n              }}\n            ]}\n          />\n          <ProFormCaptcha\n            label=\"验证码\"\n            name=\"captcha\"\n            // 手机号的 name，onGetCaptcha 会注入这个值\n            phoneName=\"mobile\"\n            fieldProps={{\n              //\n            }}\n            captchaProps={{\n              value: 'ddd',\n              defaultValue: 'ddd',\n              size: 'small',\n              type: 'link',\n              style: { padding: 0 }\n            }}\n            rules={[\n              { validator: (_rule, value) => {\n                if(!value) {\n                  return Promise.reject(new Error('验证码不能为空'));\n                }else if(isSmsCode(value)) {\n                  return Promise.resolve();\n                } else {\n                  return Promise.reject(new Error('验证码格式不正确'));\n                }\n              }}\n            ]} \n            placeholder=\"请输入验证码\"\n            // captchaTextRender={\n            //   (paramsTiming, paramsCount) => {\n            //     return paramsTiming ? `${paramsCount} 秒后重新获取` : '获取验证码';\n            //   }\n            // }\n\n            // 如果需要失败可以 throw 一个错误出来，onGetCaptcha 会自动停止\n            // throw new Error(\"获取验证码错误\")\n            onGetCaptcha={async (mobile) => {\n              const res = await CaptchaService.get(mobile);\n              message.success(`【美团】${res.captcha}（商户注册验证码）。工作人员不会向您索要，请勿向任何人泄露，以免造成账户或资金损失。`, 5);\n            }}\n          />\n\n          <ProFormCheckbox\n            fieldProps={{\n              className:'policy'\n            }}\n            name=\"policy\">\n              我已阅读并同意 <a href=\"https://page.meituan.net/html/1615180237352_38ceb3/index.html\" target=\"_blank\" >《团好货商家版隐私政策》</a>\n          </ProFormCheckbox>\n        </ProForm>\n      </div>\n    </Base>\n  )\n}\n\nexport default Register;\n","/**\n * 获取验证码\n * \n * sobird<i@sobird.me> at 2023/06/20 10:35:44 created.\n */\nimport Cookies from 'js-cookie';\nimport http from \"@/utils/http\";\n\nexport interface CaptchaResponseData {\n  mobile: number;\n  captcha: number;\n}\n\nconst CaptchaService = {\n  async get(mobile: string) {\n    // 随机六位数\n    const i = Math.random() * (999999-100000) + 100000; \n    const captcha_num = parseInt(i as unknown as string, 10);\n    \n    return http.get<CaptchaResponseData>('/captcha', { mobile }).then(res => {\n      res.captcha = captcha_num;\n      Cookies.set('captcha', captcha_num);\n      return res;\n    });\n  }\n}\n\nexport default CaptchaService\n","/**\n * 核对校验工具 一般用户表单的校验\n * \n * @see https://github.com/validatorjs/validator.js\n * @see https://github.com/yiminghe/async-validator\n * sobird<i@sobird.me> at 2023/06/14 23:51:02 created.\n */\n\nexport const patterns = {\n  86: /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  65: /^(\\+65)?[3689]\\d{7}$/,\n  852: /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  853: /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  886: /^(\\+?886\\-?|0)?9\\d{8}$/,\n};\n\nexport default function isMobilePhone(str: string, code: 86 | 65 | 852 | 853 | 886 | string = 86) {\n  return patterns[code].test(str);\n}\n"],"names":["children","hasWindow","hasBackground","pattern","isSmsCode","str","register","data","http","_excluded","CheckboxGroup","_ref","ref","options","fieldProps","proFieldProps","valueEnum","rest","runFunction","ProFormCheckboxComponents","_ref2","ProFormCheckbox","createField","WrappedProFormCheckbox","Option","Register","navigate","form","ProForm","loading","setLoading","onFinish","values","policy","captcha","formData","captcha_cookie","message","selectBefore","event","props","doms","RightOutlined","_rule","value","interCode","isMobilePhone","mobile","res","i","captcha_num","patterns","code"],"sourceRoot":""}