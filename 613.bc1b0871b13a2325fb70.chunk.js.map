{"version":3,"file":"613.bc1b0871b13a2325fb70.chunk.js","mappings":"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","sources":["webpack:///./src/components/layout/base/index.tsx","webpack:///./src/utils/jwt.ts","webpack:///./src/services/login.ts","webpack:///./src/pages/login/index.tsx","webpack:///./src/services/common/captcha.ts","webpack:///./src/utils/validator/isMobilePhone.ts"],"sourcesContent":["/**\n * 通用布局页面\n *\n * sobird<i@sobird.me> at 2023/06/13 22:39:58 created.\n */\n\nimport React, { PropsWithChildren } from 'react';\nimport mtmLogo from '@/assets/mtm_logo.png';\nimport policeIcon from '@/assets/police_icon.png';\nimport './index.scss';\n\ninterface BaseProps {\n  hasWindow?: boolean;\n  hasBackground?: boolean;\n}\n\nconst Base: React.FC<PropsWithChildren<BaseProps>> = ({ children, hasWindow = true, hasBackground = true }) => {\n  return (\n    <div className='layout-base'>\n      <div className='base-header'>\n        <div className='base-header-box'>\n          <img src={mtmLogo} />\n        </div>\n      </div>\n      <div className='base-body' style={{background: hasBackground ? '' : 'none'}}>\n        {hasWindow ? <div className='base-body-box'><div className='base-window'>{children}</div></div> : children}\n      </div>\n      <div className='base-footer'>\n        <div className='copyright'>\n          <a target='_blank' href='https://beian.miit.gov.cn' rel='noreferrer'>\n            <span>©2020 meituan.com 京ICP备10211739号</span>\n          </a>\n          <img src={policeIcon} />\n          <a\n            target='_blank'\n            href='http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11000002002052'\n            rel='noreferrer'\n          >\n            <span>京公网安备11000002002052号</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Base;\n","/**\n * JSON Web Token\n *\n * sobird<i@sobird.me> at 2021/11/15 15:25:21 created.\n */\n\nimport { SignJWT, jwtVerify, JWTPayload } from \"jose\";\nimport { nanoid } from \"nanoid\";\n\nconst JWT_SECRET_KEY = \"JWT_SECRET_KEY\";\n\n/**\n *\n * iss, JWT Issuer: 签发人\n * exp, JWT Expiration Time: 过期时间\n * sub, JWT Subject: 主题\n * aud, JWT Audience: 受众\n * nbf, JWT Not Before: 生效时间\n * iat, JWT Issued At: 签发时间\n * jti, JWT ID: 编号\n * \n * @returns Promise<string>\n */\nexport async function signJWT(payload: JWTPayload = {}) {\n  const token = await new SignJWT(payload)\n    // Sets the JWS Protected Header on the SignJWT object.\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setExpirationTime(\"2h\")\n    .setJti(nanoid())\n    // Signs and returns the JWT.\n    .sign(new TextEncoder().encode(JWT_SECRET_KEY));\n\n  return token;\n}\n\nexport async function verifyJWT(token: string) {\n  const verified = await jwtVerify(\n    token,\n    new TextEncoder().encode(JWT_SECRET_KEY)\n  )\n  return verified.payload\n}\n\n\n\n\n","/**\n * 商家登录\n * \n * sobird<i@sobird.me> at 2023/06/22 21:40:58 created.\n */\nimport http from \"@/utils/http\";\nimport { signJWT } from \"@/utils/jwt\";\n\nexport interface ILoginRequest {\n  interCode: string;\n  mobile: string;\n  captcha?: string;\n}\n\nexport interface ILoginResponse {\n  token: string;\n  mobile?: string;\n}\n\nexport default async function login(data: ILoginRequest) {\n  const { mobile } = data;\n  return http.post<ILoginResponse>('/login', data).then(async res => {\n    const token = await signJWT({\n      mobile,\n    });\n\n    res.token = token\n  });\n}","/**\n * 用户登录页面\n *\n * sobird<i@sobird.me> at 2023/06/12 8:24:06 created.\n */\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { Button, Select, message } from 'antd';\nimport { MobileOutlined }  from '@ant-design/icons';\nimport Base from \"@/components/layout/base\";\nimport isMobilePhone from '@/utils/validator/isMobilePhone';\nimport CaptchaService from '@/services/common/captcha';\nimport login from '@/services/login';\n\nimport './index.scss';\n\nimport { ProForm, ProFormText, ProFormCaptcha } from '@ant-design/pro-components';\n\nconst { Option } = Select;\n\ninterface LoginFormData {\n  interCode: string,\n  mobile: string,\n  captcha: string,\n  policy?: boolean\n}\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [ form ] = ProForm.useForm();\n  const [loading, setLoading] = useState(false);\n\n  // 提交注册\n  const onFinish = async (values: LoginFormData)=> {\n    const { captcha, mobile, interCode } = values;\n    const captcha_cookie = Cookies.get('captcha');\n    message.destroy();\n\n    if(!isMobilePhone(mobile, interCode)) {\n      const error_str = \"手机号格式不符合要求\";\n      message.error(error_str);\n      return;\n    }\n\n    if(captcha_cookie != captcha) {\n      message.error('验证码错误');\n      return;\n    }\n\n    setLoading(true);\n    login(values).then(() => {\n      setLoading(false);\n      navigate('/');\n    })\n  };\n\n  const selectBefore = (\n    <ProForm.Item \n      noStyle\n      name=\"interCode\">\n      <Select \n        popupMatchSelectWidth={false} \n        bordered={false} \n        onClick={(event) => {event.stopPropagation()}} \n        optionLabelProp=\"label\"\n        onSelect={() => {\n          form.validateFields(['mobile']);\n        }}\n      >\n        <Option value=\"86\" label=\"+86\">+86(中国)</Option>\n        <Option value=\"65\" label=\"+65\">+65(新加坡)</Option>\n        <Option value=\"852\" label=\"+852\">+852(中国香港)</Option>\n        <Option value=\"853\" label=\"+853\">+853(中国澳门)</Option>\n      </Select>\n    </ProForm.Item>\n  );\n\n  return (\n    <Base>\n      <div className=\"base-login\">\n        <div className=\"base-title\">登录</div>\n        <ProForm\n          form={form}\n          name=\"base-form-login\"\n          initialValues={{ interCode: \"86\" }}\n          onFinish={onFinish}\n          colon={false}\n          className='base-form'\n          layout=\"horizontal\"\n          submitter={{\n            // 配置按钮文本\n            searchConfig: {\n              resetText: '重置',\n              submitText: '提交',\n            },\n            // 配置按钮的属性\n            resetButtonProps: {\n              style: {\n                // 隐藏重置按钮\n                display: 'none',\n              },\n            },\n            submitButtonProps: {},\n        \n            // 完全自定义整个区域\n            render: (props, doms) => {\n              return (\n                <>\n                  <Button style={{marginTop: 20}} loading={loading} type=\"primary\" htmlType=\"submit\" className='base-submit-btn'>登录</Button>\n                  <div className=\"signup-btn\"><div>还没有账号？<a href=\"/#/register\" target=\"_blank\">免费注册</a></div></div>\n                </>\n              );\n            },\n          }}\n        >\n          <ProFormText\n            name=\"mobile\"\n            fieldProps={{\n              prefix: selectBefore,\n              addonBefore: <MobileOutlined />,\n            }}\n            allowClear={false}\n            placeholder=\"请输入手机号\"\n          />\n          <ProFormCaptcha\n            label=\"验证码\"\n            name=\"captcha\"\n            // 手机号的 name，onGetCaptcha 会注入这个值\n            phoneName=\"mobile\"\n            fieldProps={{\n              //\n            }}\n            captchaProps={{\n              size: 'small',\n              type: 'link',\n              style: { padding: 0 }\n            }}\n            placeholder=\"请输入验证码\"\n            // captchaTextRender={\n            //   (paramsTiming, paramsCount) => {\n            //     return paramsTiming ? `${paramsCount} 秒后重新获取` : '获取验证码';\n            //   }\n            // }\n\n            // 如果需要失败可以 throw 一个错误出来，onGetCaptcha 会自动停止\n            // throw new Error(\"获取验证码错误\")\n            onGetCaptcha={async (mobile) => {\n              const interCode = form.getFieldValue('interCode');\n\n              if(!isMobilePhone(mobile, interCode)) {\n                const error_str = \"手机号格式不符合要求\";\n                message.error(error_str);\n                throw new Error(error_str);\n              }\n              \n              const res = await CaptchaService.get(mobile);\n              message.success(`【美团】${res.captcha}（商户注册验证码）。工作人员不会向您索要，请勿向任何人泄露，以免造成账户或资金损失。`, 5);\n            }}\n          />\n        </ProForm>\n      </div>\n    </Base>\n  )\n}\n\nexport default Login;\n","/**\n * 获取验证码\n * \n * sobird<i@sobird.me> at 2023/06/20 10:35:44 created.\n */\nimport Cookies from 'js-cookie';\nimport http from \"@/utils/http\";\n\nexport interface CaptchaResponseData {\n  mobile: number;\n  captcha: number;\n}\n\nconst CaptchaService = {\n  async get(mobile: string) {\n    // 随机六位数\n    const i = Math.random() * (999999-100000) + 100000; \n    const captcha_num = parseInt(i as unknown as string, 10);\n    \n    return http.get<CaptchaResponseData>('/captcha', { mobile }).then(res => {\n      res.captcha = captcha_num;\n      Cookies.set('captcha', captcha_num);\n      return res;\n    });\n  }\n}\n\nexport default CaptchaService\n","/**\n * 核对校验工具 一般用户表单的校验\n * \n * @see https://github.com/validatorjs/validator.js\n * @see https://github.com/yiminghe/async-validator\n * sobird<i@sobird.me> at 2023/06/14 23:51:02 created.\n */\n\nexport const patterns = {\n  86: /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  65: /^(\\+65)?[3689]\\d{7}$/,\n  852: /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  853: /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  886: /^(\\+?886\\-?|0)?9\\d{8}$/,\n};\n\nexport default function isMobilePhone(str: string, code: 86 | 65 | 852 | 853 | 886 | string = 86) {\n  return patterns[code].test(str);\n}\n"],"names":["children","hasWindow","hasBackground","JWT_SECRET_KEY","signJWT","payload","verifyJWT","token","login","data","mobile","http","res","Option","Login","navigate","form","ProForm","loading","setLoading","onFinish","values","captcha","interCode","captcha_cookie","message","isMobilePhone","error_str","selectBefore","event","props","doms","MobileOutlined","i","captcha_num","patterns","str","code"],"sourceRoot":""}