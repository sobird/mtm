{"version":3,"file":"736.ae528b9cc989462093df.chunk.js","mappings":"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","sources":["webpack:///./src/components/pro/form/index.tsx","webpack:///./src/components/pro/field/AmountRule/index.tsx","webpack:///./src/components/pro/form/AmountRule/index.tsx","webpack:///./src/components/pro/field/UseTerm/index.tsx","webpack:///./src/components/pro/form/UseTerm/index.tsx","webpack:///./src/pages/coupon/detail/index.tsx","webpack:///./src/services/coupon.ts"],"sourcesContent":["import React from 'react';\nimport type { InputProps } from 'antd';\nimport type { InputRef } from 'antd/lib/input';\nimport type { ProFormFieldItemProps } from '@ant-design/pro-form/es/typing';\nimport ProField from '@ant-design/pro-form/es/components/Field';\n\nexport const WrappedProFormField = (ProFieldComponent: React.ElementType, valueType?: string) => {\n  const ProFormField: React.FC<ProFormFieldItemProps<any, InputRef>> = ({\n    fieldProps,\n    proFieldProps,\n    ...rest\n  }: ProFormFieldItemProps<InputProps, InputRef>) => {\n    console.log(valueType, fieldProps, proFieldProps, rest)\n    return (\n      <ProField\n        valueType={valueType}\n        render={(text: any, fieldProps: any) => {\n          const { mode } = fieldProps;\n          return <ProFieldComponent text={text} mode={mode} fieldProps={fieldProps} />;\n        }}\n        renderFormItem={(text: any, fieldProps: any) => {\n          const { mode } = fieldProps;\n          return <ProFieldComponent text={text} mode={mode} fieldProps={fieldProps} />;\n        }}\n        fieldProps={fieldProps}\n        // filedConfig={\n        //   {\n        //     valueType,\n        //   } as const\n        // }\n        proFieldProps={proFieldProps}\n        {...rest}\n      />\n    );\n  };\n  \n  return ProFormField;\n};\n","/**\n * 优惠券满减规则 自定义表单控件 跟业务耦合\n * \n * sobird<i@sobird.me> at 2023/09/18 21:05:33 created.\n */\n\nimport React, { useState } from 'react';\nimport { InputNumber, Space, Form } from 'antd';\nimport type { ProFieldFC } from '@ant-design/pro-components';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\ntype ValidateStatus = Parameters<typeof Form.Item>[0]['validateStatus'];\n// 兼容代码-----------\nimport 'antd/lib/input-number/style';\n\nexport type Value = string | number | undefined | null;\n\nexport type ValuePair = Value[];\n\nexport type FieldAmountRuleProps = {\n  text: ValuePair;\n  placeholder?: string | string[];\n  separatorWidth?: number;\n};\n\n/**\n * 优惠券满减规则组件\n *\n * @param FieldAmountRuleProps\n */\nconst FieldAmountRule: ProFieldFC<FieldAmountRuleProps> = (\n  {\n    text,\n    mode,\n    render,\n    placeholder,\n    renderFormItem,\n    fieldProps,\n  },\n  ref,\n) => {\n  const { value, defaultValue, onChange, id, validator = [] } = fieldProps;\n\n  const [validate, setValidate] = useState([]);\n\n  const [valuePair, setValuePair] = useMergedState(() => defaultValue, {\n    value,\n    onChange,\n  });\n\n  if (mode === 'read') {\n    const dom = (\n      <span ref={ref}>\n        满{text[0]}减{text[1]}\n      </span>\n    );\n    if (render) {\n      return render(text, { mode, ...fieldProps }, dom);\n    }\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    const handleGroupBlur = () => {\n      if (Array.isArray(valuePair)) {\n        //   仅在两个值均为数字时才做比较并转换\n        const [value0, value1] = valuePair;\n        if (\n          typeof value0 === 'number' &&\n          typeof value1 === 'number' &&\n          value0 > value1\n        ) {\n          setValuePair([value1, value0]);\n        } else if (value0 === undefined && value1 === undefined) {\n          // 当两个值均为undefined时将值变为undefined，方便required处理\n          setValuePair(undefined);\n        }\n      }\n    };\n\n    const handleChange = (index: number, changedValue: Value) => {\n      const newValuePair = [...(valuePair || [])];\n      newValuePair[index] = changedValue === null ? undefined : changedValue;\n      setValuePair(newValuePair);\n\n      validate[index] = {...validator[index]?.(newValuePair)};\n      setValidate(validate);\n    };\n\n    const placeholderValue = fieldProps?.placeholder ||\n      placeholder || [\n      '请输入满减门槛',\n      '请输入优惠金额',\n    ];\n\n    const getInputNumberPlaceholder = (index: number) =>\n      Array.isArray(placeholderValue)\n        ? placeholderValue[index]\n        : placeholderValue;\n\n    const { className, ...restFieldProps } = fieldProps;\n\n    const dom = (\n      <Space size={10} \n        // onBlur={handleGroupBlur} \n        className={className}>\n        <Form.Item\n          label=\"满\"\n          htmlFor={`${id}-0`}\n          validateStatus={validate[0]?.status}\n          help={validate[0]?.help}\n        >\n          <InputNumber\n            style={{width: '100%'}}\n            prefix=\"￥\"\n            min={0}\n            max={5000}\n            {...restFieldProps}\n            placeholder={getInputNumberPlaceholder(0)}\n            id={`${id}-0`}\n            value={valuePair?.[0]}\n            defaultValue={defaultValue?.[0]}\n            onChange={(changedValue) => handleChange(0, changedValue)}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"减\"\n          htmlFor={`${id}-1`}\n          validateStatus={validate[1]?.status}\n          help={validate[1]?.help}\n        >\n          <InputNumber\n            prefix=\"￥\"\n            style={{width: '100%'}}\n            min={0}\n            max={5000}\n            {...restFieldProps}\n            placeholder={getInputNumberPlaceholder(1)}\n            id={`${id}-1`}\n            value={valuePair?.[1]}\n            defaultValue={defaultValue?.[1]}\n            onChange={(changedValue) => handleChange(1, changedValue)}\n          />\n        </Form.Item>\n      \n        {/* <label htmlFor={`${id}-0`}>满</label>\n        <InputNumber<number>\n          prefix=\"￥\"\n          style={{width: '100%'}}\n          min={0}\n          {...restFieldProps}\n          placeholder={getInputNumberPlaceholder(0)}\n          id={`${id}-0`}\n          value={valuePair?.[0]}\n          defaultValue={defaultValue?.[0]}\n          onChange={(changedValue) => handleChange(0, changedValue)}\n        />\n        <label htmlFor={`${id}-1`}>减</label>\n        <InputNumber<number>\n          prefix=\"￥\"\n          style={{width: '100%'}}\n          min={0}\n          {...restFieldProps}\n          placeholder={getInputNumberPlaceholder(1)}\n          id={`${id}-1`}\n          value={valuePair?.[1]}\n          defaultValue={defaultValue?.[1]}\n          onChange={(changedValue) => handleChange(1, changedValue)}\n        /> */}\n      </Space>\n    );\n\n    if (renderFormItem) {\n      return renderFormItem(text, { mode, ...fieldProps }, dom);\n    }\n    \n    return dom;\n  }\n  return null;\n};\n\n/** 预置表单校验器 根据具体业务自定 */\nexport const validator = async (rule, value: ValuePair) => {\n  const [amount, discount] = value\n  \n  if (!amount && amount !== 0) {\n    throw new Error('请输入满减门槛');\n  }\n\n  if (!discount && discount !== 0) {\n    throw new Error('请输入优惠金额');\n  }\n};\n\nexport const FieldValidator = [(value: ValuePair) => {\n  const [amount, discount] = value\n  if (!amount && amount !== 0) {\n    return {\n      status: 'error',\n      help: '请输入满减门槛'\n    }\n  }\n\n  \n}, (value: ValuePair) => {\n  const [amount, discount] = value\n  if (!discount && discount !== 0) {\n    return {\n      status: 'error',\n      help: '请输入优惠金额'\n    }\n  }\n  if (discount as number < 0.01) {\n    return {\n      status: 'error',\n      help: '面额最小值是0.01元'\n    }\n  }\n\n  if (amount === 0) {\n    if (discount as number > 500) {\n      return {\n        status: 'error',\n        help: '门槛为0时，面额需小于等于500元'\n      }\n    } else {\n      if (discount as number > 10) {\n        // Message.warning('您正在配置无门槛且面额大于10元的优惠券，请确认是否配置正确');\n      }\n    }\n  } \n}];\n\nexport default React.forwardRef(FieldAmountRule);\n","import { WrappedProFormField } from '../index';\nimport FieldAmountRule from '@/components/pro/field/AmountRule'\n\nexport { validator, FieldValidator } from '@/components/pro/field/AmountRule'\nexport default WrappedProFormField(FieldAmountRule, 'AmountRule');\n","/**\n * 使用时间组件 优惠券使用时间\n *\n * Value: [3, [20220905, 20230905]]\n * Value[0] 和 Value[1] 互斥 不能同时设值\n *\n * sobird<i@sobird.me> at 2023/09/20 3:53:49 created.\n */\n\nimport { useState } from 'react';\nimport { Space, Radio, DatePicker, InputNumber } from 'antd';\nimport type { RadioChangeEvent } from 'antd';\nimport type { ProFieldFC } from '@ant-design/pro-components';\nimport dayjs, { Dayjs } from 'dayjs';\n\nconst { RangePicker } = DatePicker;\n\nexport type Value = string | number | undefined | null;\nexport type FieldValue = [number | undefined, [Dayjs, Dayjs] | undefined];\nexport type RadioValue = 1 | 2;\n\nexport type FieldProps = {\n  text: FieldValue;\n};\n\nconst FieldUseTerm: ProFieldFC<FieldProps> = ({\n  text,\n  mode,\n  fieldProps,\n  render,\n  renderFormItem\n}) => {\n  const { value = [], onChange, defaultValue } = fieldProps;\n  const newValue = [...value] as FieldValue;\n  const [day, rangePickerValue] = newValue;\n\n  if(rangePickerValue) {\n    newValue[1] = rangePickerValue?.map(item => dayjs(item));\n  }\n\n  const [radioValue, setRadioValue] = useState<RadioValue>(value[1] ? 2 : 1);\n  const [fieldValue, setFieldValue] = useState<FieldValue>(newValue);\n\n  if (mode === 'read') {\n    const dom = (\n      <span>\n        {rangePickerValue ? rangePickerValue.join(' - ')  : day}\n      </span>\n    );\n    if (render) {\n      return render(text, { mode, ...fieldProps }, dom);\n    }\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    const onRadioChange = (e: RadioChangeEvent) => {\n      setRadioValue(e.target.value);\n      triggerChange(e.target.value, fieldValue);\n    };\n  \n    const triggerChange = (_radioValue: RadioValue, changedValue: FieldValue) => {\n      const newFieldValue = [...(changedValue || [])] as FieldValue;\n      const [, rangePickerValue] = newFieldValue;\n  \n      if(rangePickerValue) {\n        newFieldValue[1] = rangePickerValue?.map(item => item.format('YYYY-MM-DD'));\n      }\n  \n      if(_radioValue === 1) {\n        newFieldValue[1] = undefined;\n      } else {\n        newFieldValue[0] = undefined;\n      }\n  \n      onChange?.(newFieldValue);\n    };\n  \n    const handleChange = (index: number, changedValue) => {\n      const newFieldValue = [...(fieldValue || [])] as FieldValue;\n      newFieldValue[index] = changedValue === null ? undefined : changedValue;\n  \n      setFieldValue(newFieldValue);\n  \n      triggerChange(radioValue, newFieldValue);\n    };\n\n    const dom = (\n      <Radio.Group value={radioValue} onChange={onRadioChange}>\n        <Space direction='vertical'>\n          <Radio value={1}>\n            <Space>\n              <span>领取后</span>\n              <InputNumber \n              addonAfter='天' \n              min={1} \n              max={30} \n              value={fieldValue?.[0]}\n              defaultValue={defaultValue?.[0]}\n              onChange={changedValue => handleChange(0, changedValue)} \n              />\n            </Space>\n          </Radio>\n  \n          <Radio value={2}>\n            <Space>\n              <span>自定义</span>\n              <RangePicker value={fieldValue?.[1]} defaultValue={defaultValue?.[1]} onChange={changedValue => handleChange(1, changedValue)} />\n            </Space>\n          </Radio>\n        </Space>\n      </Radio.Group>\n    );\n\n    if (renderFormItem) {\n      return renderFormItem(text, { mode, ...fieldProps }, dom);\n    }\n  \n    return dom;\n  }\n};\n\nexport default FieldUseTerm;\n","import { WrappedProFormField } from '../index';\nimport FieldUseTerm from '@/components/pro/field/UseTerm'\n\nexport default WrappedProFormField(FieldUseTerm, 'UseTerm');\n","/**\n * 优惠券详情页\n *\n * sobird<i@sobird.me> at 2023/09/16 11:12:40 created.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Card, Input, Spin } from 'antd';\nimport { ProForm, ProFormText, ProFormDateTimeRangePicker, ProFormDigit, ProFormDigitRange } from '@ant-design/pro-components';\nimport InputAmountRule, { validator, FieldValidator } from '@/components/pro/form/AmountRule';\nimport ProFormUseTerm from '@/components/pro/form/UseTerm'\n\nimport CouponService, { ICouponEntity, ECouponType } from '@/services/coupon';\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 14\n  },\n};\n\nconst CouponDetail: React.FC = () => {\n  const [form] = ProForm.useForm();\n\n  const onFinish = (values, rule) => {\n    form.validateFields();\n    console.log('values', values, rule)\n  }\n\n  return (\n    <div className='page-coupon-detail'>\n      <ProForm layout=\"horizontal\" {...formItemLayout} form={form} request={() => CouponService.detail(123)} onFinish={onFinish}>\n        <ProFormText readonly getValueProps={(value) => {\n          return {\n            value: ECouponType[value]\n          }\n        }} width=\"md\" name=\"type\" label=\"优惠券类型\" />\n\n        <ProFormText width=\"lg\" name=\"name\" label=\"优惠券名称\" placeholder=\"请填写优惠券名称\" rules={[\n          { required: true, message: '请填写优惠券名称' },\n          { max: 10, message: '优惠券名称最多填写10个字' },\n        ]}/>\n       \n        {/* 发放设置 */}\n        <InputAmountRule placeholder=\"test\" readonly name=\"test\"  label=\"123456\" />\n        <InputAmountRule fieldProps={{validator: FieldValidator}} placeholder={\"12\"} name=\"test\" label=\"InputAmountRule\" width=\"lg\" />\n\n        <ProFormUseTerm readonly name=\"useTerm\" fieldProps={{b: 'b'}} label=\"只读模式\" width=\"lg\" />\n        <ProFormUseTerm name=\"useTerm\" fieldProps={{b: 'b'}} label=\"ProFormUseTerm\" width=\"lg\" />\n\n        <ProFormDigitRange separatorWidth={40} name=\"name2\" label=\"ProFormDigitRange\" width=\"lg\" required/>\n\n        <ProFormDateTimeRangePicker required width=\"lg\" name=\"dateRange\" label=\"发放时间\" />\n        <ProFormDigit label=\"发放张数\" name=\"putCount\" width=\"lg\" min={1} max={1000000} />\n      </ProForm>\n    </div>\n  );\n};\n\nexport default CouponDetail;\n","/**\n * 优惠券服务\n * \n * sobird<i@sobird.me> at 2023/09/15 21:58:06 created.\n */\n\nimport http from \"@mtm/shared/src/utils/http\";\n\ninterface ISpu {\n  /** SPU ID */\n  id: number;\n  /** SPU名称 */\n  name: string;\n  /** SPU状态; 0:已下架, 1:已上架 */\n  status: number;\n  /** 库存 */\n  stock: number;\n  /** 最低价 */\n  minPrice: number;\n  /** 当前SPU下的SKU数量 */\n  skuCount: number;\n}\n\nexport interface ICouponEntity {\n  /** 优惠券ID */\n  id: number;\n  /** 优惠券名称 */\n  name: string;\n  /** 优惠券文案 */\n  displayName: string;\n  /** 优惠券类型; 0:满减券, 1:折扣券 */\n  type: 0 | 1;\n  /** 发放时间段 */\n  putTerm: {\n    /** 优惠券发放开始日期 */\n    stime: number;\n    /** 优惠券发放结束日期 */\n    etime: number;\n  },\n  amountRule: {\n    amount: number;\n    discount: number;\n  },\n  /** 优惠券库存 */\n  stock: number;\n  /** 优惠券门槛 单位: 元 */\n  price: number;\n  /** 优惠券面额 单位: 元 */\n  discount: number;\n  /** 每人限领张数 */\n  limitCount: number;\n  /** \n   * 使用期限 单位: 天\n   * \n   * 先判断useTerm[0]的值，该值 >0 认为 是券领取X天内有效;\n   * 该值<=0 或 false，认为是在useTerm[1]到useTerm[2]期间券可以进行使用\n   */\n  useTerm: {\n    /** 优惠券领取X天内有效 */\n    periodDay: number;\n    stime: number;\n    etime: number;\n  };\n  /** 发券目标 */\n  target: 11 | 12;\n  /** 投放目标人群 -1:全部用户 新老客, 1:老客, 2:新老客 */\n  putTarget: -1 | 1 | 2;\n  /** 使用人群 */\n  useTarget: -1 | 1 | 2;\n  /** 投放位置 */\n  position: number;\n  /** 使用范围 */\n  useScope: string;\n  /** 发放数量 */\n  sendCount: number;\n  /** 当前余量 */\n  leftCount: number;\n  /** 优惠券状态; 未开始:0, 已开始(进行中):1, 已结束:2, 已撤销(已下线):6 */\n  status: 0 | 1 | 2 | 6;\n  /** 创建时间 时间戳 */\n  ctime: number;\n  /** 优惠券商品列表 */\n  spuList: ISpu[];\n  /** SPU ID 列表 */\n  spuIds: [];\n  /** 商家ID列表 */\n  wmPoiIds: number[]\n}\n\nexport interface ICouponPagination {\n  ps?: number;\n  pn?: number;\n  total: number;\n  list: ICouponEntity[]\n}\n\nexport enum ECouponType {\n  \"满减券\" = 0,\n  \"折扣券\" = 1\n}\n\nexport enum ECouponTarget {\n  \"店铺通用券\" = 11,\n  \"店铺客服体验券\" = 12\n}\n\nexport enum ECouponStatus {\n  \"全部\" = -1,\n  \"未开始\" = 0,\n  \"进行中\" = 1,\n  \"已结束\" = 2,\n  \"已下线\" = 6\n}\n\nexport const CouponStatusOption = [\n  { value: -1, label: \"全部\"},\n  { value: 0, label: \"未开始\"},\n  { value: 1, label: \"进行中\"},\n  { value: 2, label: \"已结束\"},\n  { value: 6, label: \"已下线\"}\n];\n\nexport enum ECouponStatusColor {\n  \"gray\" = 0,\n  \"green\" = 1,\n  \"blue\" = 2,\n  \"red\" = 6\n}\n\nexport interface ICouponsParams {\n  ps?: number;\n  pn?: number;\n  status?: number;\n  stime?: number;\n  etime?: number;\n}\n\nconst CouponService = {\n  list(params?: ICouponsParams) {\n    return http.get<ICouponPagination>('/merchant/coupons', params);\n  },\n  detail(id: number) {\n    return http.get<ICouponEntity>('/merchant/coupons', { id });\n  },\n  delete(id: number) {\n    return http.delete<ICouponEntity>('/merchant/coupons', { id });\n  },\n  create(data: ICouponEntity) {\n    return http.post<ICouponEntity>('/merchant/coupons', data);\n  },\n  update(data: ICouponEntity) {\n    return http.patch<ICouponEntity>('/merchant/coupons', data);\n  }\n}\n\nexport default CouponService;\n"],"names":["WrappedProFormField","ProFieldComponent","valueType","fieldProps","proFieldProps","rest","text","mode","FieldAmountRule","render","placeholder","renderFormItem","ref","value","defaultValue","onChange","id","validator","validate","setValidate","valuePair","setValuePair","useMergedState","dom","handleGroupBlur","value0","value1","handleChange","index","changedValue","_a","newValuePair","placeholderValue","getInputNumberPlaceholder","className","restFieldProps","rule","amount","discount","FieldValidator","RangePicker","newValue","day","rangePickerValue","item","radioValue","setRadioValue","fieldValue","setFieldValue","onRadioChange","e","triggerChange","_radioValue","newFieldValue","formItemLayout","form","ProForm","onFinish","values","ECouponType","ECouponTarget","ECouponStatus","CouponStatusOption","ECouponStatusColor","params","data"],"sourceRoot":""}