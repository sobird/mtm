{"version":3,"file":"587.b47dc021f21f89a69862.chunk.js","mappings":"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","sources":["webpack:///./src/components/layout/entry/index.tsx","webpack:///./src/services/merchant/category.ts","webpack:///./src/services/merchant/entry/task.ts","webpack:///./src/services/merchant/entry/type.ts","webpack:///./src/pages/settleinjx/shop/index.tsx","webpack:///./src/services/merchant/entry/index.ts"],"sourcesContent":["/**\n * 商家入住通用布局组件\n * \n * sobird<i@sobird.me> at 2023/06/22 23:01:25 created.\n */\n\n\nimport React, { PropsWithChildren } from 'react';\nimport { Dropdown, MenuProps } from 'antd';\nimport mtmLogo from '@/assets/mtm_logo.png';\nimport './index.scss';\n\nconst LayoutEntry: React.FC<PropsWithChildren> = ({ children }) => {\n  const items: MenuProps['items'] = [\n    {\n      label: '退出登录',\n      key: '1',\n    },\n  ];\n  const onClick: MenuProps['onClick'] = ({ key }) => {\n    // \n  };\n  return (\n    <div className='layout-entry'>\n      <div className='entry-header'>\n        <div className='entry-header-box'>\n          <div className='header-logo'>\n            <img className='logo' src={mtmLogo} />\n            <span>商家入驻平台</span>\n          </div>\n          <div className=\"header-item\">\n            <Dropdown menu={{items, onClick}}>\n              <span className='username'>sobird</span>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n      <div className='entry-body'>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutEntry;\n","/**\n * 主营类目\n * \n * sobird<i@sobird.me> at 2023/06/25 0:57:36 created.\n */\n\nimport http from \"@/utils/http\";\n\n/**\n * 主营类目\n */\nexport interface ICategory {\n  id: number;\n  parentId: number;\n  name: string;\n  level: number;\n  leaf: number;\n  [key: string]: any;\n}\n\nconst CategoryService = {\n  get(parentId?: number) {\n    return http.get<ICategory[]>('/merchant/category', { parentId });\n  }\n}\n\nexport default CategoryService;\n","/**\n * task.ts\n * \n * sobird<i@sobird.me> at 2023/06/30 16:39:58 created.\n */\n\nimport http from \"@/utils/http\";\n\nexport interface IEntryTask {\n  entryTaskId: number;\n  bizType: number;\n  localCommerce: number;\n}\n\nexport default {\n  get() {\n    return http.get<IEntryTask>('/merchant/entry/task');\n  }\n}","/**\n * type.ts\n * \n * sobird<i@sobird.me> at 2023/06/30 16:47:52 created.\n */\n\nimport http from \"@/utils/http\";\n\nexport interface IEntryType {\n  poiType: number;\n  poiTypeName: string;\n  poiTypeDesc: string;\n  state: number;\n  setPoiType: boolean;\n  setPoiTypeName: boolean;\n  setState: boolean;\n}\n\nexport default {\n  get() {\n    return http.get<IEntryType[]>('/merchant/entry/type');\n  }\n}","/*\n * index.tsx\n * \n * sobird<i@sobird.me> at 2023/06/22 22:41:07 created.\n */\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Card, Button, Alert, Radio, Cascader, Modal, message, Table } from 'antd';\nimport LayoutEntry from \"@/components/layout/entry\";\nimport CategoryService, { ICategory } from '@/services/merchant/category';\nimport EntryTask, { IEntryTask } from '@/services/merchant/entry/task';\nimport EntryType, { IEntryType } from '@/services/merchant/entry/type';\nimport Entry, { IEntry } from '@/services/merchant/entry';\nimport { getRowSpans, listToTree } from '@/utils';\n\nconst { Column } = Table;\n\nimport './index.scss';\n\nfunction EntryShop() {\n  const navigate = useNavigate();\n  const [categoryOptions, setCategoryOptions] = useState<ICategory[]>([]);\n  const [entryType, setEntryType] = useState<IEntryType[]>([]);\n  const [entryTask, setEntryTask] = useState<IEntryTask>();\n  const [open, setOpen] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    Promise.all([CategoryService.get(), EntryTask.get()]).then(([categoryList, entryTask] ) => {\n      const categoryTree = listToTree(categoryList);\n      setCategoryOptions(categoryTree);\n\n      Entry.get(entryTask.entryTaskId).then(({baseInfo}) => {\n        const categoryId = baseInfo.category;\n        const categoryValues = [categoryId];\n\n        const categoryItem = categoryList.find(item =>  item.id === baseInfo.category);\n        let categoryParentId = categoryItem.parentId;\n\n        while(categoryParentId) {\n          const categoryItem = categoryList.find(item =>  item.id === categoryParentId);\n          categoryValues.unshift(categoryItem.id);\n          categoryParentId = categoryItem.parentId;\n        }\n\n        form.setFieldsValue({...baseInfo, category: categoryValues, entryTaskId: entryTask.entryTaskId});\n      });\n    })\n\n    // 获取店铺类型\n    EntryType.get().then(res => {\n      setEntryType(res);\n    });\n  }, []);\n\n  // 表单提交\n  const onFinish = (values: IEntry['baseInfo']) => {\n    const { category, poiType } = values;\n\n    if(!category) {\n      message.error('请选择主营类目');\n      return;\n    }\n\n    if(!poiType) {\n      message.error('请选择店铺类型');\n      return;\n    }\n    \n    Entry.patch({\n      baseInfo: {\n        category: category[(category as number[]).length],\n        poiType,\n      }\n    }).then(() => {\n      navigate('/settleinjx/company');\n    });\n  };\n\n  const options = entryType.map(item => {\n    return {\n      value: item.poiType,\n      label: (<><span className='title'>企业{item.poiTypeName}</span><span className='desc'>{item.poiTypeDesc}</span></>)\n    }\n  });\n\n  const data = [\n    {\n      key: 1,\n      poiTypeName: '企业旗舰店',\n      poiTypeDesc: '经营一个品牌商品的旗舰店',\n    },\n    {\n      key: 2,\n      poiTypeName: '企业旗舰店',\n      poiTypeDesc: '经营多个品牌商品，且各品牌归属于同一实际控制人的旗舰店',\n    },\n    {\n      key: 3,\n      poiTypeName: '企业旗舰店',\n      poiTypeDesc: '卖场型品牌（服务类商标）商标权利人开设的旗舰店',\n    },\n    {\n      key: 4,\n      poiTypeName: '企业专卖店',\n      poiTypeDesc: '经营一个授权品牌的商品，但未获得品牌（注册商标）权利人独占授权入驻美团开放平台的商家专卖店',\n    },\n    {\n      key: 5,\n      poiTypeName: '企业专卖店',\n      poiTypeDesc: '经营多个授权品牌的商品，且各品牌归同一实际控制人的商家专卖店',\n    },\n    {\n      key: 6,\n      poiTypeName: '企业专营店',\n      poiTypeDesc: '经营多个自有品牌商品的专营店',\n    },\n    {\n      key: 7,\n      poiTypeName: '企业专营店',\n      poiTypeDesc: '经营多个授权品牌商品，持有相应注册商标权利人出具的销售授权文件',\n    },\n    {\n      key: 8,\n      poiTypeName: '企业专营店',\n      poiTypeDesc: '同时经营自有品牌商品和授权品牌商品的专营店',\n    },\n    {\n      key: 9,\n      poiTypeName: '企业工厂店',\n      poiTypeDesc: '经营一个或多个品牌商品的工厂店',\n    },\n    {\n      key: 10,\n      poiTypeName: '企业工厂店',\n      poiTypeDesc: '经营商品的商标持有人或持有相应注册商标权利人出具的销售授权文件',\n    },\n    {\n      key: 11,\n      poiTypeName: '企业工厂店',\n      poiTypeDesc: '经营商品均为自主生产的工厂店',\n    },\n  ];\n\n  const  rowSpans = getRowSpans(data, 'poiTypeName')\n\n  return (\n    <LayoutEntry>\n      <div className=\"entry-shop\">\n        <div className=\"entry-shop-tips\">\n          <Alert message=\"目前平台仅开放数码家电/办公、宠物生活、母婴玩具、服饰鞋包、运动户外、汽配摩托、医药健康类目的商家自入驻，其余类目邀约制入驻请勿提交申请。入驻审核时效预计在7个工作日内，感谢支持。\" type=\"info\" showIcon />\n        </div>\n        \n        <div className=\"entry-shop-main\">\n          <h2>请选择您的店铺类型及主营类目</h2>\n\n          <Card>\n            <Form\n              form={form}\n              onFinish={onFinish}\n              layout=\"vertical\"\n            >\n              <Form.Item name=\"category\" label=\"主营类目\">\n                <Cascader options={categoryOptions} fieldNames={{label: 'name', value: 'id'}} placeholder=\"主营类目决定您店铺的经营范围，请谨慎选择\" style={{width: 430}} />\n              </Form.Item>\n              <Form.Item name=\"poiType\" label={(<>店铺类型<Button onClick={() => setOpen(true)} type='link' className=\"how-select\">该如何选择？</Button></>)}>\n                <Radio.Group \n                  onChange={(event) => {\n                    const { value } = event.target;\n                    const poi = entryType.find(item => item.poiType == value);\n                    \n                    Modal.warning({\n                      title: `确定更改店铺类型为 ${poi.poiTypeName} ？`,\n                      content: '温馨提示：如果更换店铺类型，店铺名称会被清空，需重新上传',\n                      okText: '确定',\n                    });\n                  }} \n                  options={options} \n                  className='shop-type-radio'/>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n\n        <div className=\"entry-footer\">\n          <Button type=\"primary\" onClick={() => {\n            form.submit();\n          }}>下一步</Button>\n        </div>\n      </div>\n\n      <Modal\n        title=\"企业店铺类型和资质说明\"\n        centered\n        open={open}\n        onOk={() => setOpen(false)}\n        onCancel={() => setOpen(false)}\n        width={1000}\n        okText=\"我知道了\"\n      >\n        <Table bordered pagination={false} dataSource={data}>\n          <Column title=\"店铺类型\" dataIndex=\"poiTypeName\" key=\"poiTypeName\"\n            render={(text, _record, index) => {\n              return {\n                children: text,\n                props: {\n                  rowSpan: rowSpans[index]\n                }\n              };\n            }}\n          />\n          <Column title=\"店铺说明\" dataIndex=\"poiTypeDesc\" key=\"poiTypeDesc\" />\n        </Table>\n      </Modal>\n    </LayoutEntry>\n  )\n}\n\nexport default EntryShop;\n","/**\n * EntryService\n * \n * sobird<i@sobird.me> at 2023/06/30 20:24:10 created.\n */\n\nimport http from \"@/utils/http\";\n\nexport interface IEntryService {\n  entryTaskId?: number;\n  bizType?: number;\n  localCommerce?: number;\n  audit?: {\n    auditState: number;\n    rejectReason: string[];\n  };\n  base?: {\n    category: number | number[];\n    poiType: number;\n    name?: string;\n    logo?: string;\n    state?: number;\n  };\n  /**\n   * 客户信息\n   */\n  company?: {\n    // 公司类型\n    companyType: number;\n    // 销售渠道\n    distChannel: number[];\n    certificateBankOpen: string;\n    certificateTaxpayer: string;\n    officeAddress: string;\n    officePhoto: string[];\n    companyDesc: string;\n    companyFile: string[]\n    businessLicense: {\n      businessLicense: string;\n      socialCreditCode: string;\n      name: string;\n      address: string;\n      operatingTimeBegin: string;\n      operatingTimeEnd: string;\n      operatingTimeType: number;\n      legalPersonName: string;\n      type: string;\n      operatingRange: string;\n      registeredCapital: string;\n      foundedDate: string;\n      registerAreaId: number;\n      registerAreaName: string;\n    };\n    /**\n     * 法人信息\n     */\n    legalPerson: object;\n    enrichedPerson: object;\n    state: number;\n  }\n  manage?: {\n    goodsDesc: string[];\n    goodsPriceScope: string[];\n    peopleNumberYy: string;\n    peopleNumberKf: string;\n    peopleNumberCp: string;\n    operateName: string;\n    operatePhone: string;\n    verificationCode: string;\n    planSendCompanyList: string[];\n    base: {\n      poiType: number;\n      category: number;\n      name: string;\n      logo: string;\n      state: number;\n    },\n    person: {\n      isSameLegalPerson: number;\n      cardType: number;\n      idCardPhotos: string[];\n      name: string;\n      cardNum: string;\n      validateDateEnd: string;\n      cardValidateType: number;\n      phone: string;\n      verificationCode: string;\n      authLetter: string;\n      address: string;\n    },\n    state: number;\n    sameCityService: number;\n  };\n  basic?: {\n    productionAvgDay: object;\n    productionUnit: object;\n    productionLinePhoto: string[];\n    warehouseMode: number;\n    warehouseNumber: number;\n    warehouseArea: number;\n    warehouseAddress: string;\n    warehousePhoto: string[];\n    operateMode: number;\n    operateScope: number;\n    salesOnline: object;\n    salesAll: object;\n    sendGoodsMode: number;\n    sendGoodsAvgDay: object;\n    sendGoodsCertificate: string[];\n    alreadyExistPlatform: string[];\n    state: number;\n    peopleNumberGc: object;\n    warehouseManage: object;\n    sendGoodsAvgDayTotal: object;\n  };\n  qualificationAndBrand?: object;\n  customsRecord?: {\n    customsRecordList: string[];\n    state: number;\n  }\n}\n\nexport default {\n  get(entryTaskId?: number) {\n    return http.get<IEntryService>('/merchant/entry', {\n      entryTaskId\n    });\n  },\n  patch(data: IEntryService) {\n    return http.patch('/merchant/entry', data);\n  }\n}"],"names":["children","items","onClick","key","parentId","http","Column","EntryShop","navigate","categoryOptions","setCategoryOptions","entryType","setEntryType","entryTask","setEntryTask","open","setOpen","form","categoryList","categoryTree","baseInfo","categoryValues","categoryParentId","item","categoryItem","res","onFinish","values","category","poiType","message","options","data","rowSpans","event","value","poi","text","_record","index","entryTaskId"],"sourceRoot":""}